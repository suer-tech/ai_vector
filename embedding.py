import faiss
import numpy as np
from main import generate_embedding

instructions = [
    {
        "title": "Что такое MetaMask?",
        "content": "MetaMask — это криптовалютный кошелек и браузерное расширение, которое позволяет пользователям взаимодействовать с блокчейном Ethereum и децентрализованными приложениями (dApps). Он поддерживает ETH и токены стандарта ERC-20."
    },
    {
        "title": "Как скачать и установить расширение для браузера?",
        "content": "Перейдите на официальный сайт MetaMask. Выберите версию для вашего браузера (Chrome, Firefox, Edge) и следуйте инструкциям по установке."
    },
    {
        "title": "Установка мобильного приложения.",
        "content": "Загрузите приложение MetaMask из Google Play или App Store. Установите его на ваше устройство."
    },
    {
        "title": "Создание нового кошелька или восстановление существующего.",
        "content": "При первом запуске выберите 'Создать новый кошелек' или 'Восстановить кошелек', если у вас уже есть seed-фраза."
    },
    {
        "title": "Создание пароля.",
        "content": "Придумайте надежный пароль для защиты вашего кошелька."
    },
    {
        "title": "Сохранение и подтверждение секретной фразы (seed-фразы).",
        "content": "Запишите вашу seed-фразу и храните ее в безопасном месте. Это единственный способ восстановить доступ к вашему кошельку."
    },
    {
        "title": "Настройка безопасности.",
        "content": "Включите дополнительные меры безопасности, такие как аутентификация по отпечатку пальца или Face ID (на мобильных устройствах)."
    },
    {
        "title": "Как добавить токены в MetaMask?",
        "content": "Нажмите 'Добавить токен' в интерфейсе кошелька и введите адрес контракта токена."
    },
    {
        "title": "Как пополнить кошелек (например, USDT)?",
        "content": "Используйте обменники или другие платформы для перевода средств на ваш адрес кошелька."
    },
    {
        "title": "Как вывести деньги с MetaMask?",
        "content": "Перейдите в раздел 'Отправить', введите адрес получателя и сумму."
    },
    {
        "title": "Как добавить новые сети в MetaMask?",
        "content": "В настройках выберите 'Добавить сеть' и введите данные сети (RPC URL, Chain ID и т.д.)."
    },
    {
        "title": "Переключение между сетями.",
        "content": "Выберите нужную сеть из выпадающего списка в верхней части интерфейса."
    },
    {
        "title": "Как отправлять и получать криптовалюту?",
        "content": "Для отправки нажмите 'Отправить', введите адрес получателя и сумму. Для получения просто скопируйте свой адрес кошелька."
    },
    {
        "title": "Как переводить средства между сетями?",
        "content": "Используйте мосты (bridges) для перевода активов между различными сетями."
    },
    {
        "title": "Подключение к децентрализованным приложениям (dApps).",
        "content": "Откройте dApp в браузере и нажмите 'Подключить кошелек'. Выберите MetaMask."
    },
    {
        "title": "Примеры использования (Uniswap и др.).",
        "content": "На Uniswap выберите токены для обмена, подтвердите транзакцию через MetaMask."
    },
    {
        "title": "Как восстановить доступ к кошельку?",
        "content": "Используйте вашу seed-фразу для восстановления доступа через интерфейс MetaMask."
    },
    {
        "title": "Как решить проблемы с входом в кошелек?",
        "content": "Проверьте правильность введенного пароля и наличие обновлений приложения."
    }
]

embeddings = []
for instruction in instructions:
    full_text = f"{instruction['title']} {instruction['content']}"
    embedding = generate_embedding(full_text)  # Вызов функции для получения эмбеддинга через API
    if embedding is not None and len(embedding) == 10:  # Проверяем, что длина равна 20
        embeddings.append(embedding)

print(embeddings)
# Преобразование списка эмбеддингов в numpy массив
embeddings_array = np.array(embeddings).astype('float32')

# Создание индекса
index = faiss.IndexFlatL2(embeddings_array.shape[1])  # L2 метрика
index.add(embeddings_array)  # Добавление эмбеддингов в индекс

# Сохранение индекса на диск
faiss.write_index(index, 'vector_index.bin')

# Сохранение инструкций для дальнейшего использования
instructions_dict = {i: instruction for i, instruction in enumerate(instructions)}